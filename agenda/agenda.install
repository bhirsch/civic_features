<?php
/** 
 * @file agenda.install
 */

/**
 * Implementation of hook_install().
 */
function agenda_install() {
  // Taxonomy:
  // Add agenda_item node type to Keywords vocabulary.
  $vocabs = taxonomy_get_vocabularies();
  _agenda_install_keywords($vocabs);

  // Nodequeue:
  // Add agenda_item to Featured Posts, Front Page Slideshow, Featured Video
  _agenda_install_nodequeue();
 
  // Revert to defaults (if it's installed, uninstalled, reinstalled, defaults start out overridden)
  /*
  todo this doesn't actuall work. Find a way to automate reverting the feature. 
  $revert = array(
    'agenda' => array(),
  );  
  features_revert($revert);
  // */
}

/**
 * Implementation of hook_uninstall(). 
 */
function agenda_uninstall() {
  // Taxonomy: 
  // Remove agenda_item node type from Keywords vocabulary.
  // Delete Resource Categories vocabulary.
  _agenda_uninstall_taxonomoy();

}

//------------------------
// Internal functions
//------------------------

/**
 * Add agenda_item to Featured Posts, Front Page Slideshow, Featured Video
 */
function _agenda_install_nodequeue() {
  db_query("INSERT INTO {nodequeue_types} "
          ."VALUES "
          // 1 Front Page Slideshow
          ."(1,'agenda_item'),"
          // 2 Featured Posts
          ."(2,'agenda_item'),"
          // 3 Featured Video
          ."(3,'agenda_item') ");
          // 4 Front Page Main
          // todo add here when all field handling has been move from sws to sws_fields / CCK formatters
  drupal_set_message(t('Agenda Items can now be added to the queues: Front Page Slideshow, Featured Posts, and Featured Video.'));
}

/**
 * Add agenda_item node type to Keywords vocabulary.
 * 
 * @param
 *  $vocabs, array, vocab objects returned by taxonomy_get_vocabularies()
 */
function _agenda_install_keywords($vocabs) {
  foreach($vocabs as $vocab) { 
    // Add agenda_item node type to Keywords vocabulary.
    if ($vocab->name == 'Keywords') {
      $vocab->nodes['agenda_item'] = 'agenda_item';
      foreach($vocab->nodes as $type) {
        $types[$type]  = 1;
      }
      $vocab->nodes = $types;
      $vocab = (array)$vocab;
      $status = taxonomy_save_vocabulary($vocab);
      if ($status == 2) {
        drupal_set_message(t('Agenda Items have been enabled to be tagged with Keywords.'));
      } else {
        drupal_set_message(t('Agenda Items have not been enabled to be tagged with Keywords. Please notify an administrator.'));
      }
    }
  }
}

/**
 * Remove agenda_item node type from Keywords vocabulary.
 */
function _agenda_uninstall_taxonomoy() {
  $vocabs = taxonomy_get_vocabularies();
  foreach($vocabs as $vocab) { 
    // Remove agenda_item node type from Keywords vocabulary.
    if ($vocab->name == 'Keywords') {
      foreach($vocab->nodes as $type) {
        $types[$type]  = 1;
      }
      $vocab->nodes = $types;
      $vocab = (array)$vocab;
      unset($vocab['nodes']['agenda_item']);
      $keyword_status = taxonomy_save_vocabulary($vocab);
      if ($keyword_status == 2) {
        drupal_set_message(t('Agenda Item Keyword tagging has been disabled.'));
      } else {
        drupal_set_message(t('Agenda Item Keyword tagging could not be disabled. Please notify an administrator.'));
      }
    }
  }
}


