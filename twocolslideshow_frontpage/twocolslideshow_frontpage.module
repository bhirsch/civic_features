<?php

include_once('twocolslideshow_frontpage.features.inc');

/**
 * Implementation of hook_init().
 */
function twocolslideshow_frontpage_init() {
  $file_path = drupal_get_path('module', 'twocolslideshow_frontpage') .'/theme/twocolslideshow_frontpage.css';
  drupal_add_css($file_path);
}

/**
 * Implementation of hook_form_alter().
 */
function twocolslideshow_frontpage_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'subtheme_form') {

    // Don't forget to include enctype, otherwise uploads won't work!
    $form['#attributes'] = array('enctype' => 'multipart/form-data');

    // Alter subtheme form to add fieldsets under background
    $form = _twocolslideshow_frontpage_carousel1($form); 
  }
}

/**
 * subtheme background of front page slideshow (carousel1)
 */
function _twocolslideshow_frontpage_carousel1($form) {
  // Rotor (Slideshow/carousel1) background
  // div.carousel1 { background: }
  $form['background']['carousel1'] = array(
    '#type' => 'fieldset',
    '#title' => t('Front Page Slideshow Background'),
    '#collapsible' => TRUE, 
    '#collapsed' => TRUE,
  );
  // Get the active background image to display to the user
  $preset_namespace = 'scale__350x350';
  $bg = variable_get('subtheme-carousel1-url', NULL);
  $path = drupal_get_path('module', 'twocolslideshow_frontpage');
  $image_filepath = ($bg) ? $bg : $path .'/theme/images/carousel1_background_3.jpg'; 
  $bg_image = theme('imagecache', $preset_namespace, $image_filepath, $alt, $title, $attributes);
  // Prompt user to upload own graphic for main background here
  $form['background']['carousel1']['subtheme-carousel1-background'] = array(
    '#type' => 'file',
    '#title' => t('Upload Graphic'),
    '#size' => 30,
    '#element_validate' => array('twocolslideshow_frontpage_save_file'),
  );
  // Display background image
  $form['background']['carousel1']['subtheme-carousel1-display'] = array(
    '#type' => 'item',
    '#title' => $bg_image,
  );
  // URL to the background image. (This cannot be modified directly.)
  $link = l("background image", $image_filepath);
  $form['background']['carousel1']['subtheme-carousel1-url'] = array(
    '#type' => 'item',
    '#title' => $link,
  );
  // Store the url along with other CSS settings here (show this one to the user)
  $form['background']['carousel1']['subtheme_element--div---class--carousel1_background'] = array(
    '#type' => 'textfield',
    '#title' => t('Front Page Slideshow Background CSS'),
    '#default_value' => variable_get('subtheme_element--div---class--carousel1_background', NULL),
  );
  // div.carousel1 span.accent
  $form['background']['carousel1']['subtheme_element--div---class--carousel1----element--span---class--accent_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Accent Color (for period and dashes around VIDEO)'),
    '#default_value' => variable_get('subtheme_element--div---class--carousel1----element--span---class--accent_color', NULL),
  );
  // .carousel1-teaser 
  $form['background']['carousel1']['subtheme_class--carousel1-teaser_background'] = array(
    '#type' => 'textfield',
    '#title' => t('Teaser Background Color'),
    '#default_value' => variable_get('subtheme_class--carousel1-teaser_background', NULL),
  );
  // .carousel1-teaser { color: X ; }
  $form['background']['carousel1']['subtheme_class--carousel1-teaser_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Teaser Text Color'),
    '#default_value' => variable_get('subtheme_class--carousel1-teaser_color', NULL),
  );
  // .carousel1-teaser { text-align: X ; }
  $form['background']['carousel1']['subtheme_class--carousel1-teaser_text-align'] = array(
    '#type' => 'textfield',
    '#title' => t('Teaser Text Align'),
    '#default_value' => variable_get('subtheme_class--carousel1-teaser_text-align', NULL),
  );
  // div.carousel1-title a {border-bottom: X ; }
  $borderbottom = 'subtheme_class--carousel1-title----element--a_border-bottom';
  $form['background']['carousel1'][$borderbottom] = array(
    '#type' => 'textfield',
    '#title' => t('Bottom Border of Title'),
    '#default_value' => variable_get($borderbottom, NULL),
  );
  // div.carousel1-title a {text-transform: X ; }
  $transform = 'subtheme_class--carousel1-title----element--a_text-transform';
  $form['background']['carousel1'][$transform] = array(
    '#type' => 'textfield',
    '#title' => t('Text Transform Title'),
    '#default_value' => variable_get($transform, NULL),
  );

  return $form; 
}

/**
 * Handle file uploads.
 */
function twocolslideshow_frontpage_save_file($form, &$form_state) {
  // Get parent (the form element that called this function)
  $parent = $form['#parents'][0];
  // Check for a new uploaded file, and use that if available.
  if ($file = file_save_upload($parent)) {
    // Get file extension.
    $parts = pathinfo($file->filename);
    $extension = $parts['extension'];
    // Check for file subtheme file directories. Create if needed.
    $directory = file_directory_path() .'/subtheme/';
    file_check_directory($directory, FILE_CREATE_DIRECTORY);
//    $directory = file_directory_path() .'/subtheme/';
//    file_check_directory($directory, FILE_CREATE_DIRECTORY);
    // Name the file. Use consistent names and replace to prevent over-storage by user.
    switch ($parent) {

    // div.carousel1 { background: }
    case 'subtheme-carousel1-background': 
        $file_path = file_directory_path() .'/subtheme/carousel1_background_3.'. $extension;
        $background .= 'url(/'. $file_path .')'; 
        // Store background
        $form_state['values']['subtheme-carousel1-url'] = $file_path;
        $form_state['values']['subtheme_element--div---class--carousel1_background'] = $background;
      break;
    }

    // The image was saved using file_save_upload() and was added to the
    // files table as a temporary file. We'll make a copy and let the garbage
    // collector delete the original upload.
    if (file_copy($file, $file_path, FILE_EXISTS_REPLACE)) {
      // TODO Why do we have to reload for the new pic to show up?
      // Flush image cache for this pic.
      imagecache_image_flush($file_path);
    }
  }   
  return $form;
}
